<?php


namespace App\Form;


use Symfony\Component\Form\AbstractType;
use Symfony\Component\Form\Extension\Core\Type\EmailType;
use Symfony\Component\Form\Extension\Core\Type\TextareaType;
use Symfony\Component\Form\Extension\Core\Type\TextType;
use Symfony\Component\Form\FormBuilderInterface;
use Symfony\Component\OptionsResolver\OptionsResolver;
use Symfony\Component\Validator\Constraints\Email;
use Symfony\Component\Validator\Constraints\Length;
use Symfony\Component\Validator\Constraints\NotBlank;

class ContactType extends AbstractType
{
    public function buildForm(FormBuilderInterface $builder, array $options): void
    {
        $builder
            ->add('nom', TextType::class, [
                'constraints' => [
                    new NotBlank(['message' => "Ce champ est requis."]),
                    new Length(['min' => 3, 'minMessage' => 'Veuillez mettre un nom valide.']),
                ]
            ])
            ->add('email', EmailType::class, [
                'constraints' => [
                    new NotBlank(['message' => "Ce champ est requis."]),
                    new Email(['message' => "Votre email n'est pas valide."]),
                ]
            ])
            ->add('sujet', TextType::class, [
                'constraints' => [
                    new NotBlank(['message' => "Ce champ est requis."]),
                    new Length(['min' => 10, 'minMessage' => 'Veuillez complÃ©ter votre sujet.'])
                ]
            ])
            ->add('description', TextareaType::class,[
                'constraints' => [
                    new NotBlank(['message' => "Ce champ est requis."]),
                    new Length([
                        'min' => 20,
                        'minMessage' => 'Votre message est trop court.',
                        'max' => 250,
                        'maxMessage' => 'Votre message est trop long.',
                    ])
                ]
            ])
//            ->add('recaptcha', EWZRecaptchaType::class, [
//                'label' => false,
//                'attr' => [
//                    'options' => [
//                        'theme' => 'light',
//                        'type'  => 'image',
//                        'size'  => 'image',
//                    ]
//                ],
//                'mapped' => false,
//                'constraints' => [
//                    new RecaptchaTrue()
//                ]
//            ])
            ;
    }

    public function configureOptions(OptionsResolver $resolver): void
    {
        parent::configureOptions($resolver); // TODO: Change the autogenerated stub
    }

}
